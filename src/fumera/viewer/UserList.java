/*
 * Fumera Ar-Ge Yaz�l�m M�h. �ml. San. ve Tic. Ltd. �ti. | Copyright 2012-2013
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions 
 * are met: 
 * 
 * 1. Redistributions of source code must retain the above copyright 
 * notice, this list of conditions, and the following disclaimer. 
 * 
 * 2. Redistributions in binary form must reproduce the above copyright 
 * notice, this list of conditions, and the following disclaimer in the 
 * documentation and/or other materials provided with the distribution. 
 * 
 * 3. The name of the author may not be used to endorse or promote products 
 * derived from this software without specific prior written permission. 
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR 
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
 * OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY 
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES 
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
 * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 */

package fumera.viewer;

import fumera.controller.Information;
import fumera.controller.JavaDBtoObj;
import fumera.model.User;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tansel
 */
public class UserList extends javax.swing.JFrame {

    private ArrayList<User> users = new ArrayList<User>();
    /**
     * Creates new form UserList
     */
    public UserList() {
        initComponents();
        users = JavaDBtoObj.getUsersFromDB();
        userTable.setShowHorizontalLines( true);
        userTable.setShowVerticalLines( true);
        userTable.setRowSelectionAllowed( true);
        
        DefaultTableModel modelAktif = (DefaultTableModel) userTable.getModel();
        for( int i = 0; i < users.size(); i++){
            String str = "";
            switch( users.get(i).getUserLevelInt()){
                case 1:
                    str = "Yönetici";
                    break;
                case 2:
                    str = "Düzenleyici";
                    break;
                case 3:
                    str = "Kullanıcı";
                    break;
                case 4:
                    str = "İzleyici";
                    break;
                case 5:
                    str = "Demo";
                    break;
            }
            
            modelAktif.insertRow(userTable.getRowCount(), new Object[]{
            users.get(i).getUserRealName(),
            users.get(i).getUserName(),
            str,
            users.get(i).getSiparisCount()});
        }
        userTable.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kullanıcı Listesi");
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(600, 300));
        setResizable(false);

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kullanıcı İsmi", "Kullanıcı Adı", "Seviyesi", "Sipariş Girdileri"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setToolTipText("Kullanıcı Düzenlemek İçin Çift Tıklayınız");
        userTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTableMouseClicked
        // TODO add your handling code here:
        if( evt.getClickCount() >= 2) {
            if( Information.getUserLevel() == 1) {
                UserInformation userInformation = new UserInformation( users.get(userTable.getSelectedRow()));
                userInformation.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/fumera/icons/mevcut_kullanici.png")));
                userInformation.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE); 
                userInformation.getRootPane().setWindowDecorationStyle(JRootPane.PLAIN_DIALOG);
                userInformation.pack();
                userInformation.setLocationRelativeTo( null);
                userInformation.enableEdit( false);
                userInformation.setVisible( true);
            } else {
                Object[] options = {"Tamam"};
                JOptionPane.showOptionDialog( UserList.this, "Sadece Yönetici Yeni Kullanıcı Ekleyebilir!", "Hata!",
                        JOptionPane.INFORMATION_MESSAGE, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
            }
        }
    }//GEN-LAST:event_userTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
